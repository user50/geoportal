<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:cxf="http://cxf.apache.org/core"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
			http://www.springframework.org/schema/jee 
							http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
		
    <import resource="security-context.xml"/> 
    
    <context:component-scan base-package="org.w2fc"/>    
    <context:annotation-config/>
    
    <bean id="geoCoderFactory" class="org.w2fc.geoportal.ws.geocoder.YandexGeoCoderFactory"/>
    <bean id="geoCoder" class="org.w2fc.geoportal.ws.geocoder.YandexGeoCoder" factory-bean="geoCoderFactory" factory-method="create"/>

<!--    <aop:aspectj-autoproxy proxy-target-class="true"/>

    &lt;!&ndash; Aspect &ndash;&gt;
    <bean id="logAspect" class="org.w2fc.geoportal.ws.aspect.LoggingAspect" factory-method="aspectOf"/>-->

    <!-- CXF -->
	<!-- import resource="classpath:META-INF/cxf/cxf.xml"/-->
    
   <jaxws:endpoint
			name="cxf-servlet"
			implementor="org.w2fc.geoportal.ws.PortalWs">
	</jaxws:endpoint>
    
    <!-- WEB CONFIGURATION -->
    
    <mvc:annotation-driven />
    
    <mvc:interceptors>
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<property name="cacheMappings">
			    <props>
				<prop key="/geo/icon/*">2592000</prop>
				<prop key="/geo/compileicon/*">2592000</prop>
				<prop key="/wms/">2592000</prop>
			    </props>
			</property>
		</bean>
        <mvc:interceptor>
            <mvc:mapping path="/geoobjects/**"/>
            <mvc:mapping path="/layers/**"/>
            <mvc:mapping path="/acl/**"/>
            <bean id="tokenHolderInterceptor" class="org.w2fc.geoportal.config.TokenHolderInterceptor">
            </bean>
        </mvc:interceptor>
	</mvc:interceptors>
    
    <mvc:resources mapping="/*.htm" location="/*.htm" />
    <mvc:resources mapping="/unsec/**" location="/unsec/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	
	<!-- WEB CONFIGURATION -->
    
    <!-- HIBERNATE CONFIGURATION -->
        
    <bean id="propertyConfigurer" class="org.w2fc.conf.Configuration">
        <property name="locations">
            <list>
                <value>/WEB-INF/spring/${properyFile}</value>
            </list>
        </property>
    </bean>
        
    <!--bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
    </bean-->
    
    <jee:jndi-lookup id="dataSource"
		jndi-name="jdbc/geoportal"
		expected-type="javax.sql.DataSource" />
    
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean	">
	<!--bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"-->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
                <value>org.w2fc.geoportal.domain</value>
                <value>org.w2fc.geoportal.domain.**.*</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernatespatial.postgis.PostgisDialect</prop>
				<prop key="hibernate.show_sql">${hibernate.log}</prop>
				<prop key="hibernate.format_sql">${hibernate.log}</prop>
				
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">../spring/ehcache.xml</prop>
				
				<prop key="hibernate.generate_statistics">true</prop>
                <!-- prop key="hibernate.hbm2ddl.auto">validate</prop-->
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
        		<prop key="hibernate.search.default.indexBase">${lucene.indexDir}</prop>
        		<prop key="org.hibernate.envers.store_data_at_delete">true</prop>
			</props>
		</property>
        <property name="eventListeners">
            <map key-type="java.lang.String" value-type="org.hibernate.event.EventListeners">
                <entry key="post-insert" value-ref="auditEventListener" />
                <entry key="post-update" value-ref="auditEventListener" />
                <entry key="post-delete" value-ref="auditEventListener" />
                <entry key="pre-collection-update" value-ref="auditEventListener" />
                <entry key="pre-collection-remove" value-ref="auditEventListener" />
                <entry key="post-collection-recreate" value-ref="auditEventListener" />
            </map>
        </property>
	</bean>
    
    <bean id="auditEventListener" class="org.hibernate.envers.event.AuditEventListener" />

    <tx:annotation-driven transaction-manager="transactionManager"/>
 
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" primary="true">
    <!-- bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
        
    <!-- Cartography -->
    
    <!-- bean id="dataSourceCartography" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc1.driver}" />
        <property name="url" value="${jdbc1.url}" />
        <property name="username" value="${jdbc1.user}" />
        <property name="password" value="${jdbc1.password}" />
    </bean-->
    
    <jee:jndi-lookup id="dataSourceCartography"
		jndi-name="jdbc/cartography"
		expected-type="javax.sql.DataSource" />
    
    <bean id="sessionFactoryCartography" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean ">
        <property name="dataSource" ref="dataSourceCartography" />
        <!-- property name="packagesToScan">
            <list>
                <value>ru.infor.ws.objects.cartography.entities</value>
                <value>ru.infor.ws.objects.cartography.entities.**.*</value>
                <value>ru.infor.ws.objects.core.entities</value>
                <value>ru.infor.ws.objects.core.entities.**.*</value>
                <value>ru.infor.ws.objects.analytics.entities</value>
                <value>ru.infor.ws.objects.analytics.entities.**.*</value>
            </list>
        </property-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory</prop>
                <prop key="net.sf.ehcache.configurationResourceName">../spring/ehcache.xml</prop>
                
                <prop key="hibernate.generate_statistics">true</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManagerCartography"/>
 
    <bean id="transactionManagerCartography" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryCartography"/>
    </bean>
    
    <!-- HIBERNATE CONFIGURATION -->


	<!-- EhCache -->
	
   <cache:annotation-driven />
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager">
			<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
				<property name="configLocation" value="/WEB-INF/spring/ehcache.xml" />
				<property name="shared" value="true" />
			</bean>
		</property>
	</bean>
	
	<!-- EhCache -->
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="15000000"/>
	</bean>
    
</beans>
